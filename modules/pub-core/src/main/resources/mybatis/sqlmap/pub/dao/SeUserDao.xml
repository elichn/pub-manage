<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.elichn.pub.core.model.pub.dao.security.SeUserDao">
    <select id="selectUserByUserName" resultType="com.elichn.pub.core.model.pub.pojo.security.SeUser"
            resultMap="com.elichn.pub.core.model.pub.mapper.security.SeUserMapper.BaseResultMap"
            parameterType="java.lang.String">
        select * from se_user where username=#{username};
    </select>

    <sql id="selectUsersByPageSql">
        (select a.id, a.username, a.cn_name, a.user_type, a.descn, a.status, a.email, GROUP_CONCAT(a.role_id)
        role_id, GROUP_CONCAT(r.role_name) role_name
        from (select * from se_user u LEFT JOIN se_user_role ur ON u.id = ur.user_id
        where u.username!='admin'
        <if test="username != null and username.trim() != ''">
            and username like CONCAT('%', #{username},'%')
        </if>
        <if test="status != null">
            and u.status = #{status}
        </if>

        <if test="userType != null">
            and u.user_type = #{userType}
        </if>
        ) a
        left join se_role r on a.role_id = r.id
        <where>

            <choose>
                <when test="roleNames != null">
                    and ((r.role_name in
                    <foreach collection="roleNames" separator="," item="item" open="(" close=")">
                        #{item}
                    </foreach>
                    ) or r.role_name is null)
                </when>

                <otherwise>
                    and r.role_name is null
                </otherwise>
            </choose>
        </where>
        group by a.id) b
        <if test="roleName != null and roleName.trim() != ''">
            where find_in_set(#{roleName},b.role_name)
        </if>
    </sql>

    <!-- 查询用户列表，不包含广告主用户和联盟用户 -->
    <select id="selectUsersByPage" resultType="com.elichn.pub.core.model.pub.bvo.SeUserRoleBvo"
            parameterType="map">
        select b.id userId,b.username userName, b.cn_name cnName,b.user_type userType, b.descn
        userDescn, b.status, b.email, b.role_id
        roleId, b.role_name roleName
        from
        <include refid="selectUsersByPageSql"/>
        order by b.id desc limit #{startCount},#{pageSize}
    </select>

    <select id="selectUsersByNameRows" resultType="java.lang.Integer"
            parameterType="map">
        select count(*) from
        <include refid="selectUsersByPageSql"/>
    </select>

    <select id="selectUserByEmail" resultType="com.elichn.pub.core.model.pub.pojo.security.SeUser"
            resultMap="com.elichn.pub.core.model.pub.mapper.security.SeUserMapper.BaseResultMap"
            parameterType="java.lang.String">
        select * from se_user where email=#{email};
    </select>

    <select id="getUserByRole" resultType="com.elichn.pub.core.model.pub.pojo.security.SeUser"
            resultMap="com.elichn.pub.core.model.pub.mapper.security.SeUserMapper.BaseResultMap"
            parameterType="List">
        select distinct u.* from se_user_role ur join se_user u on ur.user_id = u.id and u.status = 1 and ur.role_id in
        <foreach collection="list" item="item" open="(" close=")" separator=",">
            #{item}
        </foreach>
    </select>

    <select id="getUserByRoleId" resultType="com.elichn.pub.core.model.pub.pojo.security.SeUser"
            resultMap="com.elichn.pub.core.model.pub.mapper.security.SeUserMapper.BaseResultMap"
            parameterType="int">
        select distinct u.* from se_user_role ur join se_user u
        on ur.user_id = u.id and ur.role_id = #{_parameter}
    </select>

    <select id="getUsersByCode" resultType="com.elichn.pub.core.model.pub.pojo.security.SeUser"
            resultMap="com.elichn.pub.core.model.pub.mapper.security.SeUserMapper.BaseResultMap"
            parameterType="List">
        select distinct u.id, u.username, u.cn_name from se_user_role ur
        join se_user u on ur.user_id = u.id and u.status = 1
        join se_role r on ur.role_id = r.id and r.code in
        <foreach collection="list" item="item" open="(" close=")" separator=",">
            #{item}
        </foreach>
    </select>

    <select id="getUserInfo" resultType="com.elichn.pub.core.model.pub.bvo.SeUserBvo">
        select
            u.id,
            u.username,
            u.cn_name cnName,
            u.email,
            u.user_type userType,
            u.descn,
            if(find_in_set("OUT_PACK_CUSTOMER", group_concat(r.code)) > 0, 1, 0) userRole
        from se_user u
        left join se_user_role ur on u.id = ur.user_id
        left join se_role r on ur.role_id = r.id
        where u.username = #{userName}
    </select>

    <select id="getUserInfoById" resultType="com.elichn.pub.core.model.pub.bvo.SeUserBvo">
        select
        u.id,
        u.username,
        u.cn_name cnName,
        u.email,
        u.user_type userType,
        u.descn 'desc',
        if(find_in_set("OUT_PACK_CUSTOMER", group_concat(r.code)) > 0, 1, 0) userRole
        from se_user u
        left join se_user_role ur on u.id = ur.user_id
        left join se_role r on ur.role_id = r.id
        where u.id = #{userId}
    </select>
</mapper>